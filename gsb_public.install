<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function gsb_public_install() {

  $actions = array(
    'migration_prep',
    'siteinfo',
    'time_date',
    'userinfo',
    'roles',
    'users',
    'filter_formats',
    'taxonomy',
    'workbench',
    'panopoly',
    'pathauto',
    'cron',
    'cache',
    'files',
    'image_styles',
    'themes',
    'media',
    'menu',
    'blocks',
    'breadcrumbs_by_path',
    'fancybox',
    'login_destination',
    'acquia',
    'cmis',
    'ds',
    'menu_position',
    'quickbar',
    'panels',
    'cleanup',  // please leave this as the last task to run
  );

  foreach($actions as $action) {
    _gsb_public_print('Starting ' . $action . ' action');
    $time_start = microtime(true);
    include_once('includes/' . $action . '.install.inc');
    $func = '_gsb_public_setup_' . $action;
    $func();
    $time_end = microtime(true);
    $time = $time_end - $time_start;
    _gsb_public_print('End of ' . $action . ' action. Completed in ' . $time . ' seconds.');
  }
}

function _gsb_public_print($text) {
  if (PHP_SAPI == 'cli') {
    drush_print($text);
  }
}

function _gsb_public_variable_set_multiple($variables) {
  foreach($variables as $variable => $value) {
    variable_set($variable, $value);
  }
}

function _gsb_public_terms_add($terms) {
  foreach($terms as $tid => $term) {
    $fields = array(
      'tid' => $tid,
      'parent' => $term['parent'],
    );
    db_insert('taxonomy_term_hierarchy')
      ->fields($fields)
      ->execute();

    $fields = array(
      'tid' => $tid,
      'vid' => $term['vid'],
      'name' => $term['name'],
      'description' => $term['description'],
      'format' => $term['format'],
      'weight' => $term['weight'],
      'uuid' => $term['uuid'],
    );
    db_insert('taxonomy_term_data')
      ->fields($fields)
      ->execute();
  }
}

/**
 * Get the terms for a given set of term names and a given vocab name
 */
function _gsb_public_get_terms($term_names,$vocab_name) {
  $terms = array();
  foreach ($term_names as $term_name) {
    $term = taxonomy_get_term_by_name($term_name, $vocab_name);
    $term = array_shift($term);
    $terms[] = $term;
  }
  return $terms;
}

/**
 * Update the taxonomies from/to for a list of entities
 */
function _gsb_public_update_entities($entities, $remove_from_term, $from_vocab_name, $from_tid, $to_vocab_name, $to_terms) {

  watchdog('tax_mapping',"in _gsb_public_update_entities",array(),WATCHDOG_NOTICE);
  watchdog('tax_mapping','from tid = ',array($from_tid),WATCHDOG_NOTICE);

  foreach($entities as $entity) {

    $node = node_load($entity->entity_id);
    watchdog('tax_mapping','node id = ',array($node->nid),WATCHDOG_NOTICE);

    $ewrapper = entity_metadata_wrapper('node', $node);

    // update the terms in 'to' vocab
    $set_to_terms = false;
    $field_names = _gsb_public_get_field_name_by_vocab_name($node, $to_vocab_name);
    foreach($field_names as $field_name) {
      _gsb_public_set_field_terms($ewrapper,$field_name,$to_terms);
      $set_to_terms = true;
    }

    // check the $remove_from_term flag to determine if we should try to remove
    // the 'from' term.
    // also, we will remove the 'from' term only if we were able to update the 'to' terms
    // so this means the entity needs to have a field for both the 'from' and the 'to' vocabs

    if ($remove_from_term && $set_to_terms) {
      $field_names = _gsb_public_get_field_name_by_vocab_name($node, $from_vocab_name);
      foreach($field_names as $field_name) {
        _gsb_public_remove_field_term($ewrapper,$field_name,$from_tid);
      }
    }

    if ($set_to_terms) {
      watchdog('tax_mapping','updated node nid = ',array($node->nid),WATCHDOG_NOTICE);
      $ewrapper->save();
    }

    //watchdog('tax_mapping','wrapper = ',_wrapper_debug($ewrapper),WATCHDOG_NOTICE);
  }

}

/**
 * Set the terms for a term reference field
 */
function _gsb_public_set_field_terms($ewrapper,$field_name,$new_terms) {
  $current_terms = array();
  if (!empty($ewrapper->{$field_name})) {
    $current_terms = $ewrapper->{$field_name}->value();
  }
  watchdog('tax_mapping',$field_name.' current_terms = ',$current_terms,WATCHDOG_NOTICE);
  $new_terms = _gsb_public_combine_terms($current_terms, $new_terms);
  watchdog('tax_mapping',$field_name.' new_terms = ',$new_terms,WATCHDOG_NOTICE);
  $ewrapper->{$field_name}->set($new_terms);
}

/**
 * Remove a term from a term reference field
 */
function _gsb_public_remove_field_term($ewrapper,$field_name,$tid) {
  $current_terms = $ewrapper->{$field_name}->value();
  watchdog('tax_mapping',$field_name.' current_terms = ',$current_terms,WATCHDOG_NOTICE);
  $new_terms = _gsb_public_remove_term($tid, $current_terms);
  watchdog('tax_mapping',$field_name.' new_terms = ',$new_terms,WATCHDOG_NOTICE);
  $ewrapper->{$field_name}->set($new_terms);
}

/**
 * Remove a term from a list of terms
 */
function _gsb_public_remove_term($tid, $current_terms) {
  $new_terms = array();
  foreach($current_terms as $term) {
    if ($term->tid != $tid) {
      $new_terms[] = $term;
    }
  }
  return $new_terms;
}

/**
 * Combine a list of terms, with check to see if term is already
 * in the list
 */
function _gsb_public_combine_terms($terms1, $terms2) {
  $new_terms = $terms2;
  foreach($terms1 as $term1) {
    $found = false;
    foreach($terms2 as $term2) {
      if ($term2->tid == $term1->tid) {
        $found = true;
        break;
      }
    }
    if (!$found) {
      $new_terms[] = $term1;
    }
  }
  return $new_terms;
}

/**
 * Get a list of field names that reference a vocab within a node
 */
function _gsb_public_get_field_name_by_vocab_name($node, $vocab_name) {
  //watchdog('tax_mapping','in _gsb_public_get_field_name_by_vocab_name',array(),WATCHDOG_NOTICE);
  //watchdog('tax_mapping','node = ',$node,WATCHDOG_NOTICE);
  $map = field_info_field_map();
  $field_vocabs = array();
  foreach (field_info_fields() as $field_name => $field_info) {
    // Only process taxonomy term reference fields.
    if ($field_info['type'] == 'taxonomy_term_reference') {
      // Loop through the allowed values to find the vocabularies used by the field.
      foreach ($field_info['settings']['allowed_values'] as $allowed_value) {
        // Restrict to fields used by this content type and matching the specified vocabulary.
        if ($allowed_value['vocabulary'] == $vocab_name && in_array($node->type, $map[$field_name]['bundles']['node'])) {
          $field_vocabs[$field_name] = $field_name;
        }
      }
    }
  }
  return $field_vocabs;
}

/**
 * Delete fields.
 */
function _gsb_public_delete_fields($fields) {
  foreach ($fields as $field_name) {
    if ($info = field_info_field($field_name)) {
      foreach ($info['bundles'] as $entity_type => $bundles) {
        foreach ($bundles as $bundle) {
          if ($instance = field_info_instance($entity_type, $field_name, $bundle)) {
            field_delete_instance($instance);
          }
        }
      }
    }

    field_delete_field($field_name);
  }
}

/**
 * Add a 'year' date format.
 */
function gsb_public_update_7000() {
  // Insert custom format: 2011
  db_insert('date_formats')
    ->fields(array('format' => 'Y', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2011
  db_insert('date_format_type')
    ->fields(array('type' => 'year', 'title' => 'Year', 'locked' => 0))
    ->execute();
  // Date Year Format
  variable_set('date_format_year', 'Y');
}

/**
 * Add a video image format.
 */
function gsb_public_update_7001() {
  // Declare our image styles
  $image_styles = array(
    '270x158_video' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '270',
          'height' => '158',
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'center',
          'ypos' => 'center',
          'alpha' => 100,
          'path' => 'profiles/gsb_public/themes/gsb_theme/images/video_play.png',
        ),
        'weight' => 2,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Add a 'time_only' date format.
 */
function gsb_public_update_7002() {
  // Insert custom format: 2:45pm
  db_insert('date_formats')
    ->fields(array('format' => 'g:ia', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2:45pm
  db_insert('date_format_type')
    ->fields(array('type' => 'time_only', 'title' => 'Time only', 'locked' => 0))
    ->execute();
  // Date Time only Format
  variable_set('date_format_time_only', 'g:ia');
}

/**
 * Add a 'dayname_no_year' date format.
 */
function gsb_public_update_7003() {
  // Insert custom format: 2:45pm
  db_insert('date_formats')
    ->fields(array('format' => 'l, M d', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2:45pm
  db_insert('date_format_type')
    ->fields(array('type' => 'dayname_no_year', 'title' => 'Day name, no year', 'locked' => 0))
    ->execute();
  // Date Time only Format
  variable_set('date_format_dayname_no_year', 'l, M d');
}

/**
 * Add another image style.
 */
function gsb_public_update_7004() {
  // Declare our image styles
  $image_styles = array(
    '566x396' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 566,
          'height' => 396,
        ),
        'weight' => 1,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Adds image styles
 */
function _gsb_public_install_add_image_style($image_styles) {
  // Loop through the image styles and add them.
  foreach ($image_styles as $name => $effects) {
    $style = image_style_save(array('name' => $name));
    foreach ($effects as $effect) {
      $effect['isid'] = $style['isid'];
      image_effect_save($effect);
    }
  }
}

/**
 * Enable the addthis and computed_field modules.
 */
function gsb_public_update_7005() {
  module_enable(array('addthis', 'computed_field'));
}

/**
 * Add another image style.
 */
function gsb_public_update_7006() {
  // Declare our image styles
  $image_styles = array(
    '145x_variable' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 145,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Add pathauto ignore words
 */
function gsb_public_update_7007() {
  variable_set("pathauto_ignore_words",
    "a, an, as, at, before, but, by, for, from, is, in, into, like, of, off, on, onto, our, per, since, than, the, this, that, to, up, via, with");
}


/**
 * Update the 'event_category' vocabulary
 */
function gsb_public_update_7008() {

  $vocab_found = false;
  $term_found = false;

  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->machine_name == 'event_category') {
      $vocab_found = true;
      break;
    }
  }

  if ($vocab_found) {

    $terms = taxonomy_get_tree($vid);
    foreach ($terms as $key => $term) {
      if ($term->name == 'On-campus Events') {
        $term_found = true;
        break;
      }
    }

    if ($term_found) {
      // Rename term 'On-campus Events'
      // to.         'On-campus'
      $term->name = 'On-campus';
      taxonomy_term_save($term);
    }

    // Add term 'Diverse Communities'

    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'Diverse Communities',
    );
    taxonomy_term_save($term);

  }

}

/**
 * Enable diff and breadcrumbs_by_path module.
 */
function gsb_public_update_7009() {
  module_enable(array('diff', 'breadcrumbs_by_path'));

  db_query("UPDATE {system} SET weight = '-6' WHERE name = 'breadcrumbs_by_path'");
}

// Enable breakpoints module.
function gsb_public_update_7010() {
  module_enable(array('breakpoints'));
}

// Enable gsb_tokens module.
function gsb_public_update_7011() {
  module_enable(array('gsb_tokens'));
}

/**
 * Update the gsb_wysiwyg_text format filter
 */
function gsb_public_update_7012() {
  $format = filter_format_load('gsb_wysiwyg_text');
  $filters = filter_list_format($format->format);
  // Build the $format->filters array...
  $format->filters = array();
  foreach($filters as $name => $filter) {
    foreach($filter as $k => $v) {
      $format->filters[$name][$k] = $v;
    }
  }
  $format->filters["wysiwyg"]['settings']["valid_elements"] =
    "a[!href|target<_blank|title|style],\n" .
    "div[style|class|id|align<center?justify?left?right],\n" .
    "p,br,em,i,strong,u,cite,blockquote,hr,ul,ol,li,dl,dt,dd,sup,sub,\n" .
    "table,tbody,thead,th,tr,td,\n" .
    "span[style|id],p[style|class|id],\n" .
    "h1,h2,h3,h4,h5,h6,\n" .
    "object,iframe,area,embed,\n" .
    "address,abbr,caption,pre,code,script,\n" .
    "img[!src|title|alt|style|width|height|class|hspace|vspace|id],\n" .
    "@[style]";
  // Save the panopoly wysiwyg format.
  filter_format_save($format);
}

/**
 * Update the wysiwyg modules
 */
function gsb_public_update_7013() {

  // Disable some wysiwyg modules

  module_disable(array('gsb_panopoly_wyiswyg_override'));
  drupal_uninstall_modules(array('gsb_panopoly_wyiswyg_override'));

  module_disable(array('panopoly_wyiswyg'));
  drupal_uninstall_modules(array('panopoly_wyiswyg'));

  module_disable(array('wysiwyg_filter'));
  drupal_uninstall_modules(array('wysiwyg_filter'));

  // Update the body field

  $num_updated = db_update('field_revision_field_body')
    ->fields(array(
      'field_body_format' => 'gsb_wysiwyg_text',
    ))
    ->condition('field_body_format', 'panopoly_wysiwyg_text', '=')
    ->execute();

  $num_updated = db_update('field_data_field_body')
    ->fields(array(
      'field_body_format' => 'gsb_wysiwyg_text',
    ))
    ->condition('field_body_format', 'panopoly_wysiwyg_text', '=')
    ->execute();

}

/**
 * Remove navbar and related modules
 */
function gsb_public_update_7014() {

  // Remove navbar and related modules

  module_disable(array('gsb_admin_enhancements'));
  drupal_uninstall_modules(array('gsb_admin_enhancements'));

  module_disable(array('navbar'));
  drupal_uninstall_modules(array('navbar'));

  // Enable the admin menu modules

  module_enable(array('admin_menu','admin_menu_toolbar'));

}

/**
 * Enable gsb_feature_gsa_search module.
 */
function gsb_public_update_7015() {
  module_enable(array('gsb_feature_gsa_search'));
}

/**
 * Update the gsb_wysiwyg_text format filter allowed html settings
 */
function gsb_public_update_7016() {

  $format = filter_format_load('gsb_wysiwyg_text');
  $filters = filter_list_format($format->format);

  // Build the $format->filters array...
  $format->filters = array();
  foreach($filters as $name => $filter) {
    foreach($filter as $k => $v) {
      $format->filters[$name][$k] = $v;
    }
  }

  $format->filters["filter_html"]['status'] = '1';
  $format->filters["filter_html"]['settings']['allowed_html'] = '<a> <em> <strong> <cite> <blockquote> <code> <ul> <ol> <li> <dl> <dt> <dd> <div> <p> <br> <i> <u> <cite> <hr> <sub> <sup> <table> <tbody> <thead> <th> <tr> <td> <span> <h1> <h2> <h3> <h4> <h5> <h6> <object> <iframe> <area> <embed> <address> <abbr> <caption> <pre> <code> <script> <img>';

  // Save the format.
  filter_format_save($format);

}

/*
 * Add 450x263 and 450x263_video image format.
 */
function gsb_public_update_7017() {
  // Declare our image styles
  $image_styles = array(
    '450x263' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '450',
          'height' => '263',
        ),
      ),
    ),
    '450x263_video' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '450',
          'height' => '263',
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'center',
          'ypos' => 'center',
          'alpha' => 100,
          'path' => 'profiles/gsb_public/themes/gsb_theme/images/video_play.png',
        ),
        'weight' => 2,
      ),
    ),
    '600x440' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '600',
          'height' => '440',
        ),
      ),
    ),
  );
  _gsb_public_install_add_image_style($image_styles);
}

/**
 * Enable gsb_feature_diptych_fpp module.
 */
function gsb_public_update_7018() {
  module_enable(array('gsb_feature_diptych_fpp'));
}

/**
 * Enable simplesaml_auth module.
 */
function gsb_public_update_7019() {
  module_enable(array('simplesaml_auth'));
}

/**
 * Enable gsb_feature_academic_calendar_ct module.
 */
function gsb_public_update_7020() {
  module_enable(array('gsb_feature_academic_calendar_ct'));
}

/**
 * Enable gsb_feature_academic_calendar_display module.
 */
function gsb_public_update_7021() {
  module_enable(array('gsb_feature_academic_calendar_display'));
}

/**
 * Enable backup_migrate module.
 */
function gsb_public_update_7022() {
  module_enable(array('backup_migrate'));
}

/**
 * Setting gsb_fpp_customization to follow panopoly_magic, in the module peckin' order.
 */
function gsb_public_update_7023() {

  // Make the weight of gsb_fpp_customization one higher than panopoly_magic.
  $weight = db_select('system', 's')
              ->fields('s', array('weight'))
              ->condition('name', 'panopoly_magic', '=')
              ->execute()
              ->fetchField();

  db_update('system')
    ->fields(array('weight' => $weight +1))
    ->condition('name', 'gsb_fpp_customization', '=')
    ->execute();
}

/**
 * Enable phone and webform_phone modules.
 */
function gsb_public_update_7024() {
  module_enable(array('phone', "webform_phone"));
}

/**
 * Enable house ads feature.
 */
function gsb_public_update_7025() {
  module_enable(array('gsb_feature_house_ads_fpp'));
}

/**
 * Add a 'european_date_format' date format.
 */
function gsb_public_update_7026() {
  // Insert custom format: 25 Nov 2011
  db_insert('date_formats')
    ->fields(array('format' => 'd M Y', 'type' => 'custom', 'locked' => 0))
    ->execute();
  // Insert custom format: 2011
  db_insert('date_format_type')
    ->fields(array('type' => 'european_date_format', 'title' => 'European date format', 'locked' => 0))
    ->execute();
  // Date Year Format
  variable_set('european_date_format', 'd M Y');
}

/**
 * Insert 'Off-campus' term into 'Event Category' vocab.
 */
function gsb_public_update_7027() {
  $fields = array(
    'tid' => '10582',
    'parent' => 0,
  );
  db_insert('taxonomy_term_hierarchy')
    ->fields($fields)
    ->execute();

  $fields = array(
    'tid' => '10582',
    'vid' => 136,
    'name' => 'Off-campus',
    'description' => NULL,
    'format' => NULL,
    'weight' => 0,
    'uuid' => '55e1bbfc-fe67-4f12-994e-d6c57e57c889',
  );
  db_insert('taxonomy_term_data')
    ->fields($fields)
    ->execute();
}

/**
 * Enable gsb panopoly magic customization module
 */
function gsb_public_update_7028() {
  module_enable(array('gsb_panopoly_magic_customization'));
}

/**
 * Insert 'MS' term into 'Program' vocab.
 */
function gsb_public_update_7029() {
  $fields = array(
    'tid' => '10887',
    'parent' => 0,
  );
  db_insert('taxonomy_term_hierarchy')
    ->fields($fields)
    ->execute();

  $fields = array(
    'tid' => '10887',
    'vid' => 151,
    'name' => 'MS',
    'description' => NULL,
    'format' => NULL,
    'weight' => 0,
    'uuid' => '73271ac4-f333-400f-a25d-96ea10e5337d',
  );
  db_insert('taxonomy_term_data')
    ->fields($fields)
    ->execute();
}

/*
 * Set the 'allowed layouts' for the page content type
 */
function gsb_public_update_7030() {

  // Set the 'allowed layouts' for the page content type

  $value = 'O:22:"panels_allowed_layouts":4:{s:9:"allow_new";b:1;s:11:"module_name";s:19:"panelizer_node:page";s:23:"allowed_layout_settings";a:47:{s:8:"flexible";b:1;s:14:"twocol_stacked";b:1;s:13:"twocol_bricks";b:1;s:6:"twocol";b:1;s:25:"threecol_33_34_33_stacked";b:1;s:17:"threecol_33_34_33";b:1;s:25:"threecol_25_50_25_stacked";b:1;s:17:"threecol_25_50_25";b:1;s:6:"onecol";b:1;s:6:"whelan";b:1;s:12:"webb_flipped";b:1;s:4:"webb";b:1;s:14:"taylor_flipped";b:1;s:6:"taylor";b:1;s:12:"sutro_double";b:1;s:5:"sutro";b:1;s:13:"selby_flipped";b:1;s:5:"selby";b:1;s:17:"sanderson_flipped";b:1;s:9:"sanderson";b:1;s:5:"rolph";b:1;s:4:"pond";b:1;s:6:"phelan";b:1;s:15:"moscone_flipped";b:1;s:7:"moscone";b:1;s:8:"mccoppin";b:1;s:15:"hewston_flipped";b:1;s:7:"hewston";b:1;s:6:"harris";b:1;s:5:"geary";b:1;s:12:"burr_flipped";b:1;s:4:"burr";b:1;s:22:"bryant_flipped_flipped";b:1;s:6:"bryant";b:1;s:5:"brown";b:1;s:15:"brenham_flipped";b:1;s:7:"brenham";b:1;s:6:"boxton";b:1;s:16:"bartlett_flipped";b:1;s:8:"bartlett";b:1;s:26:"minipanel-two-columns-wide";b:1;s:20:"minipanel-one-column";b:1;s:21:"gsb-standard-page-two";b:1;s:29:"gsb-landing-standard-page-one";b:1;s:18:"gsb-landing-events";b:0;s:14:"gsb-front-page";b:0;s:21:"gsb-business-insights";b:0;}s:10:"form_state";N;}';

  variable_set('panelizer_node:page_allowed_layouts', $value);
  variable_set('panelizer_node:event_allowed_layouts', $value);
  variable_set('panelizer_node:webform_allowed_layouts', $value);

  variable_set('panelizer_node:page_allowed_layouts_default', 0);
  variable_set('panelizer_node:event_allowed_layouts_default', 0);
  variable_set('panelizer_node:webform_allowed_layouts_default', 0);

}

/**
 * Change date formats that contain M.
 */
function gsb_public_update_7031() {
  db_update('date_formats')->fields(array('format' => 'M j, Y - g:ia'))->condition('format', 'M. j, Y - g:ia')->execute();
  db_update('date_formats')->fields(array('format' => 'M j, Y'))->condition('format', 'M. j, Y')->execute();
  variable_set('date_format_medium', 'M j, Y');
  variable_set('date_format_medium_time', 'M j, Y - g:ia');
}

/**
 * Enable pathauto_title_alias module.
 */
function gsb_public_update_7032() {
  module_enable(array('pathauto_title_alias'));
}

/**
 * Enable gsb_fpp_stock_content module.
 */
function gsb_public_update_7033() {
  module_enable(array('gsb_fpp_stock_content'));
}

/**
 * Insert 'View From The Top' term into 'Event Series' vocab.
 */
function gsb_public_update_7034() {
  $fields = array(
    'tid' => '10602',
    'parent' => 0,
  );
  db_insert('taxonomy_term_hierarchy')
    ->fields($fields)
    ->execute();

  $fields = array(
    'tid' => '10602',
    'vid' => 141,
    'name' => 'View From The Top',
    'description' => NULL,
    'format' => NULL,
    'weight' => 0,
    'uuid' => '20fd5ebe-bfff-4322-b57d-155fd6743ee0',
  );
  db_insert('taxonomy_term_data')
    ->fields($fields)
    ->execute();
}

/**
 * Enable gsb_feature_workbench module.
 */
function gsb_public_update_7035() {
  module_enable(array('gsb_feature_workbench'));
}

/**
 * Enable menu_trail_by_path module.
 */
function gsb_public_update_7036() {
  module_enable(array('menu_trail_by_path'));
}

/**
 * Update image styles
 */
function gsb_public_update_7037() {

  // Declare our image styles
  $image_styles = array(
    '170x170' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '170',
          'height' => '170',
        ),
      ),
    ),
    '270x158' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '270',
          'height' => '158',
        ),
      ),
    ),
    '270x158_video' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '270',
          'height' => '158',
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'center',
          'ypos' => 'center',
          'alpha' => 100,
          'path' => 'profiles/gsb_public/themes/gsb_theme/images/video_play.png',
        ),
        'weight' => 2,
      ),
    ),
    '450x263' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 450,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'image_crop',
        'data' => array(
          'width' => 450,
          'height' => 263,
          'anchor' => 'center-top',
        ),
        'weight' => 2,
      ),
    ),
    '450x263_video' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 450,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'image_crop',
        'data' => array(
          'width' => 450,
          'height' => 263,
          'anchor' => 'center-top',
        ),
        'weight' => 2,
      ),
      array(
        'name' => 'canvasactions_file2canvas',
        'data' => array(
          'xpos' => 'center',
          'ypos' => 'center',
          'alpha' => 100,
          'path' => 'profiles/gsb_public/themes/gsb_theme/images/video_play.png',
        ),
        'weight' => 3,
      ),
    ),
    '600x440' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '600',
          'height' => '440',
        ),
      ),
    ),
    '627x367' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '627',
          'height' => '367',
        ),
      ),
    ),
    '170x100' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '170',
          'height' => '100',
        ),
      ),
    ),
    '44x44' => array(
      array(
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => '44',
          'height' => '44',
        ),
      ),
    ),
    '566x396' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 566,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
      array(
        'name' => 'image_crop',
        'data' => array(
          'width' => 566,
          'height' => 396,
          'anchor' => 'center-top',
        ),
        'weight' => 2,
      ),
    ),
    '145x_variable' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 145,
          'height' => '',
          'upscale' => 1,
        ),
        'weight' => 1,
      ),
    ),
    '566x_variable' => array(
      array(
        'name' => 'image_scale',
        'data' => array(
          'width' => 566,
          'height' => '',
        ),
        'weight' => 1,
      ),
    ),
  );

  // Loop through the image styles and add them.
  foreach ($image_styles as $name => $effects) {

    $style = image_style_load($name);

    if (empty($style)) {
      $style = image_style_save(array('name' => $name));
    } else {
      $style_effects = $style['effects'];
      foreach ($style_effects as $style_effect) {
        image_effect_delete($style_effect);
      }
    }

    foreach ($effects as $effect) {
      $effect['isid'] = $style['isid'];
      image_effect_save($effect);
    }

  }

}

/**
 * Update image styles for media's image preview and teaser
 */
function gsb_public_update_7038() {

  // overriding image view modes preview and teaser which are
  // initially setup in media.module

  module_load_include('inc', 'file_entity', 'file_entity.file_api');

  $default_image_styles = array(
    'preview' => '450x263',
    'teaser' => '450x263',
  );

  foreach ($default_image_styles as $view_mode => $image_style) {

    $image_displays = file_displays_load('image', $view_mode);

    $display_name = 'image__' . $view_mode . '__file_image';;

    if (isset($image_displays[$display_name])) {
      $display = $image_displays[$display_name];
      $display->settings['image_style'] = $image_style;
      file_display_save((object) $display);
    }

  }

}


/**
 * Enable gsb_feature_image_styles module.
 */
function gsb_public_update_7039() {
  module_enable(array('gsb_feature_image_styles'));
}

/**
 * Insert new terms into 'Department' vocab.
 */
function gsb_public_update_7040() {
  $terms = array(
    '10203' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Financial Aid Office',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => '1d0ab1b4-e3b6-4b6c-ac65-c72b7cd24c24',
    ),
    '10217' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Schwab Residential Center',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => 'eb97f609-8c1f-42fa-aea0-f44c480733bb',
    ),
  );

  _gsb_public_terms_add($terms);

}

/**
 * Insert new terms into 'Department' vocab.
 */
function gsb_public_update_7041() {
  $terms = array(
    '10205' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Library',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => '55c6cad0-9dc7-4c83-8f69-5d7fce9cd21c',
    ),
    '10207' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Marketing and Communications',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => 'b7ea5692-5461-4098-96d6-63739b1d1faa',
    ),
    '10200' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Behavioral Lab',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => 'b712f5ce-ad21-4195-8452-30a1935c07a5',
    ),
    '10204' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Global Innovation Programs',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => '4069965f-05dd-4c67-ab6e-ebab14d89206',
    ),
    '10199' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Academic Administration',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' =>  '5f971c42-03c1-46b1-9469-93572c213c65',
    ),
    '10218' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Stanford MSx Program',
      'description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => '9448bf0f-8e6b-40f1-aad5-5ad10f45c9ae',
    ),
    '10202' => array(
      'parent' => 0,
      'vid' => 126,
      'name' => 'Faculty Support','description' => NULL,
      'format' => NULL,
      'weight' => 0,
      'uuid' => 'de4f8306-3995-4b03-8047-5a8dfd6d431c',
    ),
  );

  _gsb_public_terms_add($terms);
}

/**
 * Enable gsb_panels_ipe_overrides module.
 */
function gsb_public_update_7042() {
  module_enable(array('gsb_panels_ipe_overrides'));
}

/**
 * Alpha sort the programs.
 */
function gsb_public_update_7043() {

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 0))
    ->condition('vid', '151', '=')
    ->condition('name', 'Executive Education', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 1))
    ->condition('vid', '151', '=')
    ->condition('name', 'MBA', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 2))
    ->condition('vid', '151', '=')
    ->condition('name', 'MS', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 3))
    ->condition('vid', '151', '=')
    ->condition('name', 'MSx', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 4))
    ->condition('vid', '151', '=')
    ->condition('name', 'PhD', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 5))
    ->condition('vid', '151', '=')
    ->condition('name', 'SEED Program', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 6))
    ->condition('vid', '151', '=')
    ->condition('name', 'SIGM', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 7))
    ->condition('vid', '151', '=')
    ->condition('name', 'Social Innovation Program', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 8))
    ->condition('vid', '151', '=')
    ->condition('name', 'Stanford Ignite', '=')
    ->execute();

}

/**
 * Delete the older program field that was replaced.
 */
function gsb_public_update_7044() {

  $instance = field_info_instance('node', 'field_program_single', 'academic_calendar_event');

  // Mark field for deletion.
  field_delete_instance($instance);

  // Remove field marked for deletion.
  field_purge_batch(10);

}

/**
 * Update WITL paths and aliases.
 */
function gsb_public_update_7045() {
  // Change WITL link in navigation.
  $link = menu_link_load(15466);
  $link['link_path'] = 'programs/mba/student-life/week-in-the-life';
  menu_link_save($link);

  $old_path = 'programs/mba/student-life/gsb-unofficial/week-in-the-life/';
  $new_path = 'programs/mba/student-life/week-in-the-life/';
  $match = '%' . $old_path . '%';
  $select = db_select('url_alias');
  $select->condition('alias', $match, 'LIKE');
  $results = $select->fields('url_alias')->execute();
  foreach ($results as $path) {
    // Replace old path with new path.
    $path->alias = str_replace($old_path, $new_path, $path->alias);
    $path = (array) $path;
    path_save($path);
  }
}

/**
 * Remove menu minipanels from Our Programs submenu.
 */
function gsb_public_update_7046() {
  // mlid of Our programs link.
  $plid = '16511';

  $query = db_select('menu_links', 'ml');
  $query->fields('ml');
  $query->condition('ml.plid', $plid);
  $results = $query->execute();

  foreach ($results as $item) {
    $link = menu_link_load($item->mlid);
    // Get rid of menu minipanels options.
    $link['options']['minipanel'] = '';
    unset($link['options']['menu_minipanels_hover']);
    menu_link_save($link);
  }
}

/**
 * Enable gsb_addthis_customization module.
 */
function gsb_public_update_7047() {
  module_enable(array('gsb_addthis_customization'));
}

/**
 * Delete Academic Calendar from Event Category vocabulary.
 */
function gsb_public_update_7048() {
  taxonomy_term_delete('10556');
}

/**
 * Usage and Alpha (hybrid) sort the programs.
 */
function gsb_public_update_7049() {

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 0))
    ->condition('vid', '151', '=')
    ->condition('name', 'MBA', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 1))
    ->condition('vid', '151', '=')
    ->condition('name', 'MS', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 2))
    ->condition('vid', '151', '=')
    ->condition('name', 'MSx', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 3))
    ->condition('vid', '151', '=')
    ->condition('name', 'PhD', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 4))
    ->condition('vid', '151', '=')
    ->condition('name', 'Executive Education', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 5))
    ->condition('vid', '151', '=')
    ->condition('name', 'SEED Program', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 6))
    ->condition('vid', '151', '=')
    ->condition('name', 'SIGM', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 7))
    ->condition('vid', '151', '=')
    ->condition('name', 'Social Innovation Program', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 8))
    ->condition('vid', '151', '=')
    ->condition('name', 'Stanford Ignite', '=')
    ->execute();

}

/**
 * Usage and Alpha (hybrid) sort the department.
 */
function gsb_public_update_7050() {

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 0))
    ->condition('vid', '126', '=')
    ->condition('name', 'MBA Admissions', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 1))
    ->condition('vid', '126', '=')
    ->condition('name', 'MSx Admissions', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 2))
    ->condition('vid', '126', '=')
    ->condition('name', 'PhD Admissions', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 3))
    ->condition('vid', '126', '=')
    ->condition('name', 'Executive Education Admissions', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 4))
    ->condition('vid', '126', '=')
    ->condition('name', 'Academic Administration', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 5))
    ->condition('vid', '126', '=')
    ->condition('name', 'Behavioral Lab', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 6))
    ->condition('vid', '126', '=')
    ->condition('name', 'Faculty Support', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 7))
    ->condition('vid', '126', '=')
    ->condition('name', 'Financial Aid Office', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 8))
    ->condition('vid', '126', '=')
    ->condition('name', 'Global Innovation Programs', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 9))
    ->condition('vid', '126', '=')
    ->condition('name', 'Library', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 10))
    ->condition('vid', '126', '=')
    ->condition('name', 'Marketing and Communications', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 11))
    ->condition('vid', '126', '=')
    ->condition('name', 'Schwab Residential Center', '=')
    ->execute();

 db_update('taxonomy_term_data')
    ->fields(array('weight' => 12))
    ->condition('vid', '126', '=')
    ->condition('name', 'Stanford MSx Program', '=')
    ->execute();

}

/**
 * Enable the google_analytics and gsb_feature_google_analytics_settings modules.
 */
function gsb_public_update_7051() {
  module_enable(array('google_analytics', 'gsb_feature_google_analytics_settings'));
}

/**
 * Enable gsb_addthis_customization module.
 */
function gsb_public_update_7052() {
  module_enable(array('gsb_addthis_customization'));
}

/**
 * Enable the login destination module.
 */
function gsb_public_update_7053() {
  module_enable(array('login_destination'));

  $current_roles = user_roles();
  $roles_to_use = array('administrator', 'section editor', 'section manager', 'fa', 'aa', 'cwo_admin');
  $roles = array_intersect($current_roles, $roles_to_use);

  $rids = array();
  foreach($roles as $rid => $role) {
    $rids[$rid] = (string) $rid;
  }

  $record = array(
    'triggers' => serialize(array('login' => 'login')),
    'roles' => serialize($rids),
    'pages_type' => 0,
    'pages' => '',
    'destination_type' => 0,
    'destination' => 'admin/workbench',
    'weight' => 0,
  );

  db_insert('login_destination')->fields($record)->execute();
}

/**
 * Enable the heirarchichal select menu module.
 */
function gsb_public_update_7054() {
  module_enable(array('hs_menu'));
}

/**
 * Enable gsb_advanced_menu_customization module.
 */
function gsb_public_update_7055() {
  module_enable(array('gsb_advanced_menu_customization'));
}

/**
 * Insert 'Academic Calendar' term into 'Event Category' vocab.
 */
function gsb_public_update_7056() {

  // (10556, 136, 'Academic Calendar', NULL, NULL, 0, 'cb3a4832-13bc-412b-8cc1-a106e373b660'),

  $fields = array(
    'tid' => '10556',
    'parent' => 0,
  );
  db_insert('taxonomy_term_hierarchy')
    ->fields($fields)
    ->execute();

  $fields = array(
    'tid' => '10556',
    'vid' => 136,
    'name' => 'Academic Calendar',
    'description' => NULL,
    'format' => NULL,
    'weight' => 0,
    'uuid' => 'cb3a4832-13bc-412b-8cc1-a106e373b660',
  );

  db_insert('taxonomy_term_data')
    ->fields($fields)
    ->execute();

}

/**
 * Enable the pathauto_menu_link module
 */
function gsb_public_update_7057() {
  module_enable(array('pathauto_menu_link'));
}

/**
 * Enable gsb_feature_simplesaml module.
 */
function gsb_public_update_7058() {
  module_enable(array('gsb_feature_simplesaml'));
}

/**
 * Enable gsb_acquia_tokens module.
 */
function gsb_public_update_7059() {
  if (!module_exists('gsb_acquia_tokens')) {
    module_enable(array('gsb_acquia_tokens'));
  }
}

/**
 * Enable CacheExclude module.
 */
function gsb_public_update_7060() {
  if (!module_exists('cacheexclude')) {
    module_enable(array('cacheexclude'));
  }
}

/**
 * Enable Site Verify module.
 */
function gsb_public_update_7061() {
  if (!module_exists('site_verify')) {
    module_enable(array('site_verify'));
  }
}

/**
 * Enable Menu Attributes
 */
function gsb_public_update_7062() {
  if (!module_exists('menu_attributes')) {
    module_enable(array('menu_attributes'));
  }
}

/**
 * Disable Unneeded modules
 */
function gsb_public_update_7063() {
  $modules = array('panopoly_admin', 'panopoly_core', 'panopoly_theme', 'apps');
  module_disable($modules, 'FALSE');
  drupal_uninstall_modules($modules, 'FALSE');
}

/**
 * Insert 'Metals & Mining' term into 'Industry' vocab.
 */
function gsb_public_update_7064() {
  $fields = array(
    'tid' => '10743',
    'parent' => 0,
  );
  db_insert('taxonomy_term_hierarchy')
    ->fields($fields)
    ->execute();

  $fields = array(
    'tid' => '10743',
    'vid' => 146,
    'name' => 'Metals & Mining',
    'description' => NULL,
    'format' => NULL,
    'weight' => 0,
    'uuid' => '239dfac9-4072-4186-93af-7c7ca565e404',
  );
  db_insert('taxonomy_term_data')
    ->fields($fields)
    ->execute();
}

/**
 * Insert SIGM and Ignite into departments
 */
function gsb_public_update_7065() {
  $query = db_insert('taxonomy_term_hierarchy')->fields(array('tid', 'parent'));
  $query->values(array('tid' => '10219', 'parent' => 0));
  $query->values(array('tid' => '10220', 'parent' => 0));
  $query->execute();

  $query = db_insert('taxonomy_term_data')->fields(array('tid', 'vid', 'name', 'description', 'format', 'weight', 'uuid'));
  $query->values(array(
    'tid' => '10219',
    'vid' => 126,
    'name' => 'Ignite Admissions',
    'description' => NULL,
    'format' => NULL,
    'weight' => 4,
    'uuid' => 'be12f903-a926-46d2-9208-fca66f1b8414',
  ));
  $query->values(array(
    'tid' => '10220',
    'vid' => 126,
    'name' => 'SIGM Admissions',
    'description' => NULL,
    'format' => NULL,
    'weight' => 5,
    'uuid' => '1123ec56-425a-4395-bd6c-2d2e0526a756',
  ));

  $query->execute();
}

/**
 * Enable PhD Candidates module
 */
function gsb_public_update_7066() {
  if (!module_exists('gsb_feature_phd_candidate_ct')) {
    module_enable(array('gsb_feature_phd_candidate_ct'));
  }
}

/**
 * Enable PHD Candidates Display Module.
 */
function gsb_public_update_7067() {
  if (!module_exists('gsb_feature_phd_candidate_display')) {
    module_enable(array('gsb_feature_phd_candidate_display'));
  }
  if (!module_exists('views_field_view')) {
    module_enable(array('views_field_view'));
  }
}

/**
 * Update authenticated user permissions for edit own phd candidate
 */
function gsb_public_update_7068() {
  // Get the authenticated user role
  $authenticated_user = user_role_load_by_name('authenticated user');

  $authenticated_user_permissions = array(
    // edit own permission for phd candidate content type
    'edit own phd_candidate content',
    'view the administration theme',
  );

  // Update authenticated user role permissions
  user_role_grant_permissions($authenticated_user->rid, $authenticated_user_permissions);
}

/**
 * Enable new two digit date format.
 */
function gsb_public_update_7069() {
  // Insert custom format: 11
  db_insert('date_formats')
    ->fields(array('format' => 'y', 'type' => 'custom', 'locked' => 0))
    ->execute();

  // Insert custom format: 11
  db_insert('date_format_type')
    ->fields(array('type' => 'two_digit_year', 'title' => 'Two digit year format', 'locked' => 0))
    ->execute();

  // Date Two Digit Year Format
  variable_set('date_format_two_digit_year', 'y');
}

/**
 * Enable gsb_custom_section_title module.
 */
function gsb_public_update_7070() {
  if (!module_exists('gsb_custom_section_title')) {
    module_enable(array('gsb_custom_section_title'));
  }
}

/**
 * Enable zurb_responsive_tables.
 */
function gsb_public_update_7072() {
  if (!module_exists('zurb_responsive_tables')) {
    module_enable(array('zurb_responsive_tables'));
  }
}

/**
 * Set variable breadcrumbs_by_path_current_title to 1.
 */
function gsb_public_update_7073() {
  variable_set('breadcrumbs_by_path_current_title', 1);
} 

/**
 * Set variable breadcrumbs_by_path variables
 */
function gsb_public_update_7074() {
  variable_set('breadcrumbs_by_path_current_title', 1);
  variable_set('breadcrumbs_by_path_exclude_paths', '<front>');
} 

/**
 * Enable gsb_feature_image_fpp.
 */
function gsb_public_update_7075() {
  if (!module_exists('gsb_feature_image_fpp')) {
    module_enable(array('gsb_feature_image_fpp'));
  }
}

/**
 * Enable syslog and disable dblog.
 */
function gsb_public_update_7076() {
  module_disable(array('dblog'));
  module_enable(array('syslog'));
}

/**
 * Enable elysia_cron module
 */
function gsb_public_update_7077() {
  if (!module_exists('elysia_cron')) {
    module_enable(array('elysia_cron'));
  }
}

/**
 * Enable typogrify module.
 */
function gsb_public_update_7078() {
  if (!module_exists('typogrify')) {
    module_enable(array('typogrify'));
  }
}

/**
 * Enable acquia_purge and expire module.
 */
function gsb_public_update_7079() {
  $modules = array();
  if (!module_exists('expire')) {
    $modules[] = 'expire';
  }
  if (!module_exists('acquia_purge')) {
    $modules[] = 'acquia_purge';
  }
  if ($modules) {
    module_enable($modules);
  }
}

/**
 * Enable cmis related modules.
 */
function gsb_public_update_7080() {
  if (!module_exists('cmis')) {
    module_enable(array('cmis'));
  }
  if (!module_exists('cmis_common')) {
    module_enable(array('cmis_common'));
  }
  if (!module_exists('gsb_cmis_api')) {
    module_enable(array('gsb_cmis_api'));
  }
  if (!module_exists('gsb_cmis')) {
    module_enable(array('gsb_cmis'));
  }
}

/**
 * Enable gsb_feature_featured_person_fpp
 */
function gsb_public_update_7081() {
  if (!module_exists('gsb_feature_featured_person_fpp')) {
    module_enable(array('gsb_feature_featured_person_fpp'));
  }
}

/**
 * Enable select_or_other module
 */
function gsb_public_update_7082() {
  if (!module_exists('select_or_other')) {
    module_enable(array('select_or_other'));
  }
}

/**
 * Enable gsb_feature_case_ct and gsb_feature_working_paper_ct modules
 */
function gsb_public_update_7083() {
  if (!module_exists('gsb_feature_case_ct')) {
    module_enable(array('gsb_feature_case_ct'));
  }
  if (!module_exists('gsb_feature_working_paper_ct')) {
    module_enable(array('gsb_feature_working_paper_ct'));
  }
}

/**
 * Enable gsb_feature_case_display module
 */
function gsb_public_update_7084() {
  if (!module_exists('gsb_feature_case_display')) {
    module_enable(array('gsb_feature_case_display'));
  }
}

/**
 * Enable gsb_feature_working_paper_display module
 */
function gsb_public_update_7085() {
  if (!module_exists('gsb_feature_working_paper_display')) {
    module_enable(array('gsb_feature_working_paper_display'));
  }
}

/**
 * Enable gsb_feature_book_ct.
 */
function gsb_public_update_7086() {
  $modules = array();
  if (!module_exists('gsb_feature_book_ct')) {
    $modules[] = 'gsb_feature_book_ct';
  }

  if (!empty($modules)) {
    module_enable($modules);
  }
}

/**
 * Enable gsb_az_filter module
 */
function gsb_public_update_7087() {
  if (!module_exists('gsb_az_filter')) {
    module_enable(array('gsb_az_filter'));
  }
}

/**
 * Add setting for cmis_common to not verify the certificate.
 */
function gsb_public_update_7088() {
  variable_set('cmis_common_no_verify_cert', TRUE);
}

/**
 * Enable gsb_feature_course_ct module
 */
function gsb_public_update_7089() {
  if (!module_exists('gsb_feature_course_ct')) {
    module_enable(array('gsb_feature_course_ct'));
  }
}

/**
 * Enable gsb_feature_book_display module
 */
function gsb_public_update_7090() {
  if (!module_exists('gsb_feature_book_display')) {
    module_enable(array('gsb_feature_book_display'));
  }
}

/**
 * Enable gsb_courses_display module.
 */
function gsb_public_update_7091() {
  if (!module_exists('gsb_feature_course_display')) {
    module_enable(array('gsb_feature_course_display'));
  }
}

/**
 * Enable gsb_feature_publication_ct module.
 */
function gsb_public_update_7092() {
  if (!module_exists('gsb_feature_publication_ct')) {
    module_enable(array('gsb_feature_publication_ct'));
  }
}

/**
 * Update the 'centers_research_programs' vocabulary
 */
function gsb_public_update_7093() {

  $vocab_found = false;

  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->machine_name == 'centers_research_programs') {
      $vocab_found = true;
      break;
    }
  }

  if ($vocab_found) {

    $terms = taxonomy_get_tree($vid);
    foreach ($terms as $key => $term) {
      if ($term->name == 'CSI') {
        $term->name = 'Center for Social Innovation';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'CES') {
        $term->name = 'Center for Entrepreneurial Studies';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'CGBE') {
        $term->name = 'Center for Global Business and the Economy';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'CLDR') {
        $term->name = 'Center for Leadership Development and Research';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'SC Forum') {
        $term->name = 'Global Supply Chain Management Forum';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'SEED') {
        $term->name = 'Stanford Institute for Innovation in Developing Economies';
        taxonomy_term_save($term);
      }
      else if ($term->name == 'STEYER-TAYLOR') {
        $term->name = 'Steyer-Taylor Center for Energy Policy and Finance';
        taxonomy_term_save($term);
      }               
      else if ($term->name == 'PHI') {
        taxonomy_term_delete($term->tid);
      }    
      else if ($term->name == 'SPRIE') {
        taxonomy_term_delete($term->tid);
      }          

    }
  }

}

/**
 * Enable gsb_feature_publication_display module.
 */
function gsb_public_update_7094() {
  if (!module_exists('gsb_feature_publication_display')) {
    module_enable(array('gsb_feature_publication_display'));
  }
}

/**
 * Enable gsb_feature_business_website_ct and display modules
 */
function gsb_public_update_7095() {
  if (!module_exists('gsb_feature_business_website_ct')) {
    module_enable(array('gsb_feature_business_website_ct'));
  }
  if (!module_exists('gsb_feature_business_website_display')) {
    module_enable(array('gsb_feature_business_website_display'));
  }  
}

/**
 * Enable gsb_feature_rss_feeds.
 */
function gsb_public_update_7096() {
  if (!module_exists('gsb_feature_rss_feeds')) {
    module_enable(array('gsb_feature_rss_feeds'));
  }
}

/**
 * Update the book field_year_of_publication_value value to save only Y format
 */
function gsb_public_update_7097() {

  $query = db_select('field_data_field_year_of_publication','year_pub');
  $query->fields('year_pub', array(
    'entity_type','bundle','deleted','entity_id','revision_id','language','delta',
    'field_year_of_publication_value'
  ));
  $query->condition('year_pub.bundle','book','=');
  $result = $query->execute();
  
  foreach ($result as $item) {
    $timestamp = strtotime($item->field_year_of_publication_value);
    $date_time = date_create('@' . $timestamp);
    $date = date_format($date_time, 'Y') . '-01-01 00:00:00';
    db_update('field_data_field_year_of_publication')
      ->fields(array('field_year_of_publication_value' => $date))
      ->condition('entity_id', $item->entity_id, '=')
      ->execute();
  } 
}

/**
 * Enable gsb_agenda.
 */
function gsb_public_update_7098() {
  if (!module_exists('gsb_agenda')) {
    module_enable(array('gsb_agenda'));
  }
}

/**
 * Create Business Website Categories vocabulary.
 */
function gsb_public_update_7099() {
  $vocabulary = (object) array(
    'machine_name' => 'business_website_categories',
    'name' => 'Business Website Categories',
    'description' => '',
  );
  taxonomy_vocabulary_save($vocabulary);
}

/**
 * Setting gsb_feature_publication_display to follow panopoly_magic, in the module peckin' order.
 */
function gsb_public_update_7100() {
  // Make the weight of our module one higher than panopoly_magic.
  $weight = db_select('system', 's')
              ->fields('s', array('weight'))
              ->condition('name', 'panopoly_magic', '=')
              ->execute()
              ->fetchField();

  db_update('system')
    ->fields(array('weight' => $weight +1))
    ->condition('name', 'gsb_feature_publication_display', '=')
    ->execute();
}

/**
 * Enable smart_trim
 */
function gsb_public_update_7101() {
  if (!module_exists('smart_trim')) {
    module_enable(array('smart_trim'));
  }
}

/**
 * Change jpeg quality to 100%
 */
function gsb_public_update_7102() {
  variable_set('image_jpeg_quality', 100);
}

/**
 * Enable menu_position
 */
function gsb_public_update_7103() {
  if (!module_exists('menu_position')) {
    module_enable(array('menu_position'));
  }
  
  variable_set('menu_position_active_link_display', 'parent');
}

/**
 * Enable gsb_connecting_link.
 */
function gsb_public_update_7104() {
  if (!module_exists('gsb_connecting_link')) {
    module_enable(array('gsb_connecting_link'));
  }
}

/**
 * Update the 'business_insight_topic' vocabulary
 */
function gsb_public_update_7105() {
  $vocab_found = false;
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->machine_name == 'business_insight_topic') {
      $vocab_found = true;
      break;
    }
  }  
  if ($vocab_found) {
    // add any new terms
    $new_terms = array(
      "Career & Success",
      "Corporate Governance",
      "Education",
      "Energy",
      "Entrepreneurship",
      "Global Business",
      "Health Care",
      "Leadership",
      "Nonprofit",
      "Public Sector",
    );
    $terms = taxonomy_get_tree($vid);
    foreach ($new_terms as $new_term) {
      $term_found = false;
      foreach ($terms as $key => $term) {
        if ($term->name == $new_term) {
          $term_found = true;
          break;
        }
      }
      if (!$term_found) {
        $term = (object) array(
          'vid' => $vocabulary->vid,
          'name' => $new_term,
        );
        taxonomy_term_save($term);
      }
    }
    // rename terms
    $rename_terms = array(
      "Business & Society" => "Social Innovation",
      "Media & Entertainment" => "Management",
    );
    foreach ($rename_terms as $old => $new) {
      foreach ($terms as $key => $term) {
        if ($term->name == $old) {
          $term->name = $new;
          taxonomy_term_save($term);
          break;
        }
      }
    }
  }
  cache_clear_all();
}

/**
 * Update the 'business_insight_topic' vocabulary
 */
function gsb_public_update_7106() {

  // the mapping array has the following structure:
  //    from vocab term name
  //    remove from term - true deletes the from term
  //    from vocab name
  //    from field name
  //    to vocab name
  //    to term names

  $mapping = array(
    array(
      'from_term_name' => 'Consumer',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Marketing"),
    ),    
    array(
      'from_term_name' => 'Technology',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Operations, Information & Technology"),
    ),
    array(
      'from_term_name' => 'Operations',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Operations, Information & Technology"),
     ),
    array(
      'from_term_name' => 'Transportation',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'business_insight_topic',
      'to_term_names' => array("Management"),
     ),    
    array(
      'from_term_name' => 'Finance & Economics',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Accounting","Economics","Finance","Political Economy"),
     ),
    /* no nodes found needing this update
    array(
      'from_term_name' => 'Marketing',
      'remove_from_term' => false,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Marketing"),
     ),   
    */
    /* no nodes found needing this update
    array(
      'from_term_name' => 'Marketing',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'business_insight_topic',
      'to_term_names' => array("Career & Success"),
     ),        
     */
    array(
      'from_term_name' => 'Management & Organizations',
      'remove_from_term' => false,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'business_insight_topic',
      'to_term_names' => array("Career & Success","Corporate Governance","Management"),
     ),
    array(
      'from_term_name' => 'Management & Organizations',
      'remove_from_term' => true,
      'from_vocab_name' => 'business_insight_topic',
      'from_field_name' => 'field_business_insight_topic',
      'to_vocab_name' => 'academic_area',
      'to_term_names' => array("Organizational Behavior"),
     ),
  );

  foreach ($mapping as $mapping_info) {

    // get the mapping info

    $from_term_name =  $mapping_info['from_term_name'];
    $remove_from_term = $mapping_info['remove_from_term'];
    $from_vocab_name = $mapping_info['from_vocab_name'];
    $from_field_name = $mapping_info['from_field_name'];
    $to_vocab_name = $mapping_info['to_vocab_name'];
    $to_term_names = $mapping_info['to_term_names'];
    watchdog('tax_mapping','remove_from_term = ',array($remove_from_term),WATCHDOG_NOTICE);
    watchdog('tax_mapping','from_vocab_name = ',array($from_vocab_name),WATCHDOG_NOTICE);
    watchdog('tax_mapping','from_term_name = ',array($from_term_name),WATCHDOG_NOTICE);
    watchdog('tax_mapping','from_field_name = ',array($from_field_name),WATCHDOG_NOTICE);
    watchdog('tax_mapping','to_vocab_name = ',array($to_vocab_name),WATCHDOG_NOTICE);
    watchdog('tax_mapping','to_term_names = ',$to_term_names,WATCHDOG_NOTICE);

    // get the 'from' term

    $from_term = taxonomy_get_term_by_name($from_term_name, $from_vocab_name);
    $from_term = array_shift($from_term);

    // get all entities with the given 'from' term

    $query = db_select("field_data_$from_field_name", 'from_stuff')
      ->fields('from_stuff')
      ->condition($from_field_name.'_tid', $from_term->tid)
      ->execute();
    $entities = $query->fetchAll();

    // get all the 'to' terms

    $to_terms = _gsb_public_get_terms($to_term_names,$to_vocab_name);

    // update all the entities

    _gsb_public_update_entities($entities, $remove_from_term, $from_vocab_name, $from_term->tid, $to_vocab_name, $to_terms);
  }
}

/**
 * Delete terms no longer in use in the 'business_insight_topic' vocabulary
 */
function gsb_public_update_7107() {

  // Consumer tid = 10041
  // Finance & Economics tid = 10061
  // Management & Organizations tid = 10081
  // Marketing tid = 10086
  // Operations tid = 10101
  // Technology tid = 10111
  // Transportation tid = 10116

  taxonomy_term_delete('10041');
  taxonomy_term_delete('10061');
  taxonomy_term_delete('10081');
  taxonomy_term_delete('10086');
  taxonomy_term_delete('10101');
  taxonomy_term_delete('10111');
  taxonomy_term_delete('10116');

}

/**
 * Update all existing publications
 */
function gsb_public_update_7108() {
  _gsb_feature_publication_ct_update_academic_area();
}

/**
 * Enable gsb_node_modal.
 */
function gsb_public_update_7109() {
  if (!module_exists('gsb_node_modal')) {
    module_enable(array('gsb_node_modal'));
  }
}

/**
 * Swap login_destination for gsb_login_destination.
 */
function gsb_public_update_7110() {
  if (!module_exists('gsb_login_destination')) {
    module_enable(array('gsb_login_destination'));
  }
  if (module_exists('login_destination')) {
    module_disable(array('login_destination'));
  }
}

/**
 * Add Faculty role.
 */
function gsb_public_update_7111() {
  // Create the Faculty role
  $faculty = new stdClass();
  $faculty->name = 'Faculty';
  $faculty->weight = 7;
  user_role_save($faculty);
}

/**
 * Add gsb_workbench_save_and_publish
 */
function gsb_public_update_7112() {
  if (!module_exists('gsb_workbench_save_and_publish')) {
    module_enable(array('gsb_workbench_save_and_publish'));
  }
}

/**
 * Add gsb_field_authors
 */
function gsb_public_update_7113() {
  if (!module_exists('gsb_field_authors')) {
    module_enable(array('gsb_field_authors'));
  }
}

/**
 * Add gsb_faculty_role
 */
function gsb_public_update_7114() {
  if (!module_exists('gsb_faculty_role')) {
    module_enable(array('gsb_faculty_role'));
  }
}

/**
 * Add menu_token
 */
function gsb_public_update_7115() {
  if (!module_exists('menu_token')) {
    module_enable(array('menu_token'));
  }
}

/**
 * Add gsb_feature_media_item_ct
 */
function gsb_public_update_7116() {
  if (!module_exists('gsb_feature_media_item_ct')) {
    module_enable(array('gsb_feature_media_item_ct'));
  }
}

/**
 * Add gsb_feature_media_item_display
 */
function gsb_public_update_7117() {
  if (!module_exists('gsb_feature_media_item_display')) {
    module_enable(array('gsb_feature_media_item_display'));
  }
}

/**
 * Add submit_field
 */
function gsb_public_update_7118() {
  if (!module_exists('submit_field')) {
    module_enable(array('submit_field'));
  }
}

/**
 * Create Research Databases vocabulary.
 */
function gsb_public_update_7119() {
  $vocabulary = (object) array(
    'machine_name' => 'research_databases',
    'name' => 'Research Databases',
    'description' => '',
  );
  taxonomy_vocabulary_save($vocabulary);
}

/**
 * Update the 'research_databases' vocabulary
 */
function gsb_public_update_7120() {
  $vocab_found = false;
  $vocabularies = taxonomy_get_vocabularies();
  foreach ($vocabularies as $vid => $vocabulary) {
    if ($vocabulary->machine_name == 'research_databases') {
      $vocab_found = true;
      break;
    }
  }
  if ($vocab_found) {
    // Add term 'SSRN'
    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'SSRN',
    );
    taxonomy_term_save($term);
    // Add term 'Unknown'
    $term = (object) array(
      'vid' => $vocabulary->vid,
      'name' => 'Unknown',
    );
    taxonomy_term_save($term);
  }
}

/**
 * Delete some field instances from Workin' Paper CT
 */
function gsb_public_update_7121() {
  $field_names = array(
    'field_permissions_statement',
    'field_page_count',
    'field_link_single',
    'field_learning_objective',
    'field_citation',
    'field_year',
    'field_link_document',
  );
  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'working_paper');
    field_delete_instance($instance);
  }
  field_purge_batch(10);
}

/**
 * Add custom_add_another and markup modules.
 */
function gsb_public_update_7122() {
  if (!module_exists('custom_add_another')) {
    module_enable(array('custom_add_another'));
  }

  if (!module_exists('markup')) {
    module_enable(array('markup'));
  }
}

/**
 * Remove field_teaching_material_name.
 */
function gsb_public_update_7123() {
  _gsb_public_delete_fields(array('field_teaching_material_name'));
}

/**
 * Remove podcast and video fields.
 */
function gsb_public_update_7124() {
  _gsb_public_delete_fields(array('field_link_video_unlimited', 'field_link_podcast_unlimited'));
}

/**
 * Remove field_organization, field_position_year and field_center_affiliations.
 */
function gsb_public_update_7125() {
  _gsb_public_delete_fields(array('field_organization', 'field_position_year', 'field_center_affiliations'));
}

/**
 * Delete some field instances from Workin' Paper, Book, Publication and Media Item CT
 */
function gsb_public_update_7126() {
  $field_names = array(
    'field_date',
  );

  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'working_paper');
    field_delete_instance($instance);
  }

  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'book');
    field_delete_instance($instance);
  }

  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'media_item');
    field_delete_instance($instance);
  }

  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'publication');
    field_delete_instance($instance);
  }
  field_purge_batch(10);
}

/**
 * Delete field_pub_date_month field instance from Workin' Paper and Publication CT
 */
function gsb_public_update_7127() {
  $field_names = array(
    'field_pub_date_month',
  );
  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'working_paper');
    field_delete_instance($instance);
  }  
  foreach ($field_names as $field_name) {
    $instance = field_info_instance('node', $field_name, 'publication');
    field_delete_instance($instance);
  }
  field_purge_batch(10);
}

/**
 * Update the 'Other Authors' info for Workin' Papers
 */
function gsb_public_update_7128() {
  $data = array( 
    array( 'nid' => '311136', 'first_name' => 'Ami', 'last_name' => 'Glazer'),
    array( 'nid' => '311136', 'first_name' => 'Thomas', 'last_name' => 'Hammond'),
    array( 'nid' => '311151', 'first_name' => 'Veronica', 'last_name' => 'Benet-Martinez'),
    array( 'nid' => '311151', 'first_name' => 'Jordi', 'last_name' => 'Garolera'),
    array( 'nid' => '311226', 'first_name' => 'Raymond', 'last_name' => 'Fisman'),
    array( 'nid' => '311226', 'first_name' => 'Sheena', 'last_name' => 'Iyengar'),
    array( 'nid' => '311226', 'first_name' => 'Emir', 'last_name' => 'Kamenica'),
    array( 'nid' => '311251', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '311251', 'first_name' => 'Ginger', 'last_name' => 'Pennington'),
    array( 'nid' => '311291', 'first_name' => 'Yaniv', 'last_name' => 'Konchitchki'),
    array( 'nid' => '311291', 'first_name' => 'Wayne', 'last_name' => 'Landsman'),
    array( 'nid' => '311306', 'first_name' => 'Semyon', 'last_name' => 'Malamud'),
    array( 'nid' => '311306', 'first_name' => 'Gustavo', 'last_name' => 'Manso'),
    array( 'nid' => '311321', 'first_name' => 'Sep', 'last_name' => 'Kamvar'),
    array( 'nid' => '311321', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '311351', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '311351', 'first_name' => 'Jennifer', 'last_name' => 'Blouin'),
    array( 'nid' => '311361', 'first_name' => 'Andrew', 'last_name' => 'Healy'),
    array( 'nid' => '311361', 'first_name' => 'Cecilia', 'last_name' => 'Mo'),
    array( 'nid' => '311371', 'first_name' => 'Christopher', 'last_name' => 'Ittner'),
    array( 'nid' => '311371', 'first_name' => 'Daniel', 'last_name' => 'Taylor'),
    array( 'nid' => '311411', 'first_name' => 'Ada', 'last_name' => 'Li'),
    array( 'nid' => '311411', 'first_name' => 'Theo', 'last_name' => 'Lubke'),
    array( 'nid' => '311416', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '311416', 'first_name' => 'Kathleen', 'last_name' => 'Vohs'),
    array( 'nid' => '311426', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '311426', 'first_name' => 'Che-Lin', 'last_name' => 'Su'),
    array( 'nid' => '311436', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '311436', 'first_name' => 'Alan', 'last_name' => 'Jagolinzer'),
    array( 'nid' => '311466', 'first_name' => 'Gaizka', 'last_name' => 'Ormazabal'),
    array( 'nid' => '311466', 'first_name' => 'Daniel', 'last_name' => 'Taylor'),
    array( 'nid' => '311476', 'first_name' => 'Eric', 'last_name' => 'So'),
    array( 'nid' => '311476', 'first_name' => 'Charles', 'last_name' => 'Wang'),
    array( 'nid' => '311481', 'first_name' => 'Gael', 'last_name' => 'Mens'),
    array( 'nid' => '311481', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '311491', 'first_name' => 'Ian', 'last_name' => 'Gow'),
    array( 'nid' => '311491', 'first_name' => 'Daniel', 'last_name' => 'Taylor'),
    array( 'nid' => '311501', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '311501', 'first_name' => 'Melanie', 'last_name' => 'Rudd'),
    array( 'nid' => '311506', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '311506', 'first_name' => 'Christopher', 'last_name' => 'Ittner'),
    array( 'nid' => '311531', 'first_name' => 'Ab', 'last_name' => 'Litt'),
    array( 'nid' => '311531', 'first_name' => 'Senia', 'last_name' => 'Maymin'),
    array( 'nid' => '311531', 'first_name' => 'Taly', 'last_name' => 'Reich'),
    array( 'nid' => '311536', 'first_name' => 'Nicholas', 'last_name' => 'Bloom'),
    array( 'nid' => '311536', 'first_name' => 'Benn', 'last_name' => 'Eifert'),
    array( 'nid' => '311536', 'first_name' => 'Aprajit', 'last_name' => 'Mahajan'),
    array( 'nid' => '311536', 'first_name' => 'David', 'last_name' => 'McKenzie'),
    array( 'nid' => '311541', 'first_name' => 'Paul', 'last_name' => 'Ellickson'),
    array( 'nid' => '311541', 'first_name' => 'Sanjog', 'last_name' => 'Misra'),
    array( 'nid' => '311551', 'first_name' => 'Allan', 'last_name' => 'McCall'),
    array( 'nid' => '311551', 'first_name' => 'Gaizka', 'last_name' => 'Ormazabal'),
    array( 'nid' => '311556', 'first_name' => 'Ning', 'last_name' => 'Chen'),
    array( 'nid' => '311556', 'first_name' => 'Arpita', 'last_name' => 'Ghosh'),
    array( 'nid' => '311586', 'first_name' => 'Reto', 'last_name' => 'Hofstetter'),
    array( 'nid' => '311586', 'first_name' => 'Scott', 'last_name' => 'Shriver'),
    array( 'nid' => '311591', 'first_name' => 'Sepandar', 'last_name' => 'Kamvar'),
    array( 'nid' => '311591', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '311606', 'first_name' => 'Emily', 'last_name' => 'Garbinsky'),
    array( 'nid' => '311606', 'first_name' => 'Kathleen', 'last_name' => 'Vohs'),
    array( 'nid' => '311611', 'first_name' => 'Maria', 'last_name' => 'Bigoni'),
    array( 'nid' => '311611', 'first_name' => 'Marco', 'last_name' => 'Casari'),
    array( 'nid' => '311611', 'first_name' => 'Giancarlo', 'last_name' => 'Spagnolo'),
    array( 'nid' => '311651', 'first_name' => 'Melani', 'last_name' => 'Rudd'),
    array( 'nid' => '311651', 'first_name' => 'Kathleen', 'last_name' => 'Vohs'),
    array( 'nid' => '316051', 'first_name' => 'Rajiv', 'last_name' => 'Lal'),
    array( 'nid' => '316051', 'first_name' => 'Richard', 'last_name' => 'Lambert'),
    array( 'nid' => '316051', 'first_name' => 'Donald', 'last_name' => 'Outland'),
    array( 'nid' => '316051', 'first_name' => 'Richard', 'last_name' => 'Staelin'),
    array( 'nid' => '316176', 'first_name' => 'Elizabeth', 'last_name' => 'Newton'),
    array( 'nid' => '316176', 'first_name' => 'Pamela', 'last_name' => 'Pommerenke'),
    array( 'nid' => '316306', 'first_name' => 'Yakov', 'last_name' => 'Amihud'),
    array( 'nid' => '316306', 'first_name' => 'Bent', 'last_name' => 'Christensen'),
    array( 'nid' => '316346', 'first_name' => 'Steven', 'last_name' => 'Huddart'),
    array( 'nid' => '316346', 'first_name' => 'V.', 'last_name' => 'Narayanan'),
    array( 'nid' => '316366', 'first_name' => 'Gary', 'last_name' => 'Mischke'),
    array( 'nid' => '316366', 'first_name' => 'William', 'last_name' => 'Ocasio'),
    array( 'nid' => '316451', 'first_name' => 'Christopher', 'last_name' => 'Avery'),
    array( 'nid' => '316451', 'first_name' => 'Peter', 'last_name' => 'Zemsky'),
    array( 'nid' => '316476', 'first_name' => 'Joshua', 'last_name' => 'Gans'),
    array( 'nid' => '316476', 'first_name' => 'Scott', 'last_name' => 'Schaefer'),
    array( 'nid' => '316476', 'first_name' => 'Scott', 'last_name' => 'Stern'),
    array( 'nid' => '316786', 'first_name' => 'Marilyn', 'last_name' => 'Johnson'),
    array( 'nid' => '316786', 'first_name' => 'Karen', 'last_name' => 'Nelson'),
    array( 'nid' => '316816', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '316816', 'first_name' => 'Donald', 'last_name' => 'Wehrung'),
    array( 'nid' => '316816', 'first_name' => 'Michael', 'last_name' => ' Zeitlin'),
    array( 'nid' => '316961', 'first_name' => 'Elizabeth', 'last_name' => 'Mannix'),
    array( 'nid' => '316961', 'first_name' => 'Katherine', 'last_name' => 'Williams'),
    array( 'nid' => '317021', 'first_name' => 'Marilyn', 'last_name' => 'Johnson'),
    array( 'nid' => '317021', 'first_name' => 'Karen', 'last_name' => 'Nelson'),
    array( 'nid' => '317031', 'first_name' => 'Dilip', 'last_name' => 'Mookherjee'),
    array( 'nid' => '317031', 'first_name' => 'Debraj', 'last_name' => 'Ray'),
    array( 'nid' => '317096', 'first_name' => 'James', 'last_name' => 'Baron'),
    array( 'nid' => '317096', 'first_name' => 'M.', 'last_name' => 'Burton'),
    array( 'nid' => '317206', 'first_name' => 'Anne', 'last_name' => 'Brumbaugh'),
    array( 'nid' => '317206', 'first_name' => 'Sonya', 'last_name' => 'Grier'),
    array( 'nid' => '317316', 'first_name' => 'Donnel', 'last_name' => 'Briley'),
    array( 'nid' => '317316', 'first_name' => 'Michael', 'last_name' => 'Morris'),
    array( 'nid' => '317341', 'first_name' => 'Terri', 'last_name' => 'Griffith'),
    array( 'nid' => '317341', 'first_name' => 'John', 'last_name' => 'Sawyer'),
    array( 'nid' => '317356', 'first_name' => 'David', 'last_name' => 'Aboody'),
    array( 'nid' => '317356', 'first_name' => 'Michael', 'last_name' => 'Williams'),
    array( 'nid' => '317406', 'first_name' => 'Daniel', 'last_name' => 'Diermeier'),
    array( 'nid' => '317406', 'first_name' => 'Michael', 'last_name' => 'Ting'),
    array( 'nid' => '317551', 'first_name' => 'Antonio', 'last_name' => 'Davila'),
    array( 'nid' => '317551', 'first_name' => 'Mahendra', 'last_name' => 'Gupta'),
    array( 'nid' => '317556', 'first_name' => 'Cameron', 'last_name' => 'Anderson'),
    array( 'nid' => '317556', 'first_name' => 'Dacher', 'last_name' => 'Keltner'),
    array( 'nid' => '317651', 'first_name' => 'Brad', 'last_name' => 'Barber'),
    array( 'nid' => '317651', 'first_name' => 'Reuven', 'last_name' => 'Lehavy'),
    array( 'nid' => '317651', 'first_name' => 'Brett', 'last_name' => 'Trueman'),
    array( 'nid' => '317781', 'first_name' => 'Antonio', 'last_name' => 'Davila'),
    array( 'nid' => '317781', 'first_name' => 'Mahendra', 'last_name' => 'Gupta'),
    array( 'nid' => '318006', 'first_name' => 'Thomas', 'last_name' => 'Kramer'),
    array( 'nid' => '318006', 'first_name' => 'Maia', 'last_name' => 'Young'),
    array( 'nid' => '318121', 'first_name' => 'Sally', 'last_name' => 'Blount'),
    array( 'nid' => '318121', 'first_name' => 'Gyorgy', 'last_name' => 'Hunyady'),
    array( 'nid' => '318121', 'first_name' => 'John', 'last_name' => 'Jost'),
    array( 'nid' => '318211', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '318211', 'first_name' => 'John', 'last_name' => 'Krainer'),
    array( 'nid' => '318236', 'first_name' => 'Rachel', 'last_name' => 'Hayes'),
    array( 'nid' => '318236', 'first_name' => 'Scott', 'last_name' => 'Schaefer'),
    array( 'nid' => '318261', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '318261', 'first_name' => 'Jonathan', 'last_name' => 'Levin'),
    array( 'nid' => '318296', 'first_name' => 'Adam', 'last_name' => 'Meirowitz'),
    array( 'nid' => '318296', 'first_name' => 'Jonathan', 'last_name' => 'Woon'),
    array( 'nid' => '318301', 'first_name' => 'Christophe', 'last_name' => 'Crombez'),
    array( 'nid' => '318301', 'first_name' => 'Timothy', 'last_name' => 'Groseclose'),
    array( 'nid' => '318306', 'first_name' => 'Adam', 'last_name' => 'Meirowitz'),
    array( 'nid' => '318306', 'first_name' => 'Thomas', 'last_name' => 'Romer'),
    array( 'nid' => '318341', 'first_name' => 'Michael', 'last_name' => 'Greenstone'),
    array( 'nid' => '318341', 'first_name' => 'Annette', 'last_name' => 'Vissing-Jorgensen'),
    array( 'nid' => '318371', 'first_name' => 'Daniel', 'last_name' => 'Diermeier'),
    array( 'nid' => '318371', 'first_name' => 'Michael', 'last_name' => 'Ting'),
    array( 'nid' => '318401', 'first_name' => 'Raymond', 'last_name' => 'Fisman'),
    array( 'nid' => '318401', 'first_name' => 'Sheena', 'last_name' => 'Iyengar'),
    array( 'nid' => '318401', 'first_name' => 'Emir', 'last_name' => 'Kamenica'),
    array( 'nid' => '318411', 'first_name' => 'Gita', 'last_name' => 'Johar'),
    array( 'nid' => '318411', 'first_name' => 'Jaideep', 'last_name' => 'Sengupta'),
    array( 'nid' => '318526', 'first_name' => 'Aimee', 'last_name' => 'Drolet'),
    array( 'nid' => '318526', 'first_name' => 'Dale', 'last_name' => 'Griffin'),
    array( 'nid' => '318541', 'first_name' => 'Benjamin', 'last_name' => 'Edelman'),
    array( 'nid' => '318541', 'first_name' => 'Michael', 'last_name' => 'Schwarz'),
    array( 'nid' => '318576', 'first_name' => 'Jonah', 'last_name' => 'Berger'),
    array( 'nid' => '318576', 'first_name' => 'Marc', 'last_name' => 'Meredith'),
    array( 'nid' => '318626', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '318626', 'first_name' => 'Alan', 'last_name' => 'Jagolinzer'),
    array( 'nid' => '318626', 'first_name' => 'Edward', 'last_name' => 'Riedl'),
    array( 'nid' => '318631', 'first_name' => 'Jonah', 'last_name' => 'Berger'),
    array( 'nid' => '318631', 'first_name' => 'Michaela', 'last_name' => 'Draganska'),
    array( 'nid' => '318661', 'first_name' => 'Sandy', 'last_name' => 'Bogaert'),
    array( 'nid' => '318661', 'first_name' => 'Christophe', 'last_name' => 'Boone'),
    array( 'nid' => '318681', 'first_name' => 'Pradeep', 'last_name' => 'Chintagunta'),
    array( 'nid' => '318681', 'first_name' => 'Jean-Pierre', 'last_name' => 'Dube'),
    array( 'nid' => '318686', 'first_name' => 'Pradeep', 'last_name' => 'Chintagunta'),
    array( 'nid' => '318686', 'first_name' => 'Jean-Pierre', 'last_name' => 'Dube'),
    array( 'nid' => '318696', 'first_name' => 'Pradeep', 'last_name' => 'Chintagunta'),
    array( 'nid' => '318696', 'first_name' => 'Ramarao', 'last_name' => 'Desiraju'),
    array( 'nid' => '318741', 'first_name' => 'Daniel', 'last_name' => 'Diermeier'),
    array( 'nid' => '318741', 'first_name' => 'Pohan', 'last_name' => 'Fong'),
    array( 'nid' => '318751', 'first_name' => 'Chezy', 'last_name' => 'Ofir'),
    array( 'nid' => '318751', 'first_name' => 'Song-Oh', 'last_name' => 'Yoon'),
    array( 'nid' => '318781', 'first_name' => 'Greta', 'last_name' => 'Hsu'),
    array( 'nid' => '318781', 'first_name' => 'Ozgecan', 'last_name' => 'Kocak'),
    array( 'nid' => '318796', 'first_name' => 'Tulikaa', 'last_name' => 'Bhatia'),
    array( 'nid' => '318796', 'first_name' => 'Puneet', 'last_name' => 'Manchanda'),
    array( 'nid' => '318801', 'first_name' => 'Ming', 'last_name' => 'Leung '),
    array( 'nid' => '318801', 'first_name' => 'Giacomo', 'last_name' => 'Leung'),
    array( 'nid' => '318821', 'first_name' => 'Wayne', 'last_name' => 'Landsman'),
    array( 'nid' => '318821', 'first_name' => 'Mark', 'last_name' => 'Lang'),
    array( 'nid' => '318906', 'first_name' => 'Maretno', 'last_name' => 'Harjoto'),
    array( 'nid' => '318906', 'first_name' => 'Hoje', 'last_name' => 'Jo'),
    array( 'nid' => '318911', 'first_name' => 'Mi', 'last_name' => 'Feng'),
    array( 'nid' => '318911', 'first_name' => 'David', 'last_name' => 'McKendrick'),
    array( 'nid' => '318911', 'first_name' => 'Gael', 'last_name' => 'Mens'),
    array( 'nid' => '318996', 'first_name' => 'Nathanael', 'last_name' => 'Fast'),
    array( 'nid' => '318996', 'first_name' => 'Adam', 'last_name' => 'Galinsky'),
    array( 'nid' => '318996', 'first_name' => 'Niro', 'last_name' => 'Sivanathan'),
    array( 'nid' => '319006', 'first_name' => 'Greta', 'last_name' => 'Hsu'),
    array( 'nid' => '319006', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '319011', 'first_name' => 'Greta', 'last_name' => 'Hsu'),
    array( 'nid' => '319011', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '319086', 'first_name' => 'Sepandar', 'last_name' => 'Kamvar'),
    array( 'nid' => '319086', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '319091', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '319091', 'first_name' => 'Ian', 'last_name' => 'Gow'),
    array( 'nid' => '319121', 'first_name' => 'Magali', 'last_name' => 'Fassiotto'),
    array( 'nid' => '319121', 'first_name' => 'Giacomo', 'last_name' => 'Negro'),
    array( 'nid' => '319126', 'first_name' => 'Ilan', 'last_name' => 'Guttman'),
    array( 'nid' => '319126', 'first_name' => 'Ilan', 'last_name' => 'Kremer'),
    array( 'nid' => '319131', 'first_name' => 'Radu', 'last_name' => 'Ban'),
    array( 'nid' => '319131', 'first_name' => 'Vijayendra', 'last_name' => 'Rao'),
    array( 'nid' => '319141', 'first_name' => 'Allan', 'last_name' => 'McCall'),
    array( 'nid' => '319141', 'first_name' => 'Gaizka', 'last_name' => ' Ormazabal'),
    array( 'nid' => '319146', 'first_name' => 'Gregory', 'last_name' => 'Miller'),
    array( 'nid' => '319146', 'first_name' => 'Hal', 'last_name' => 'White'),
    array( 'nid' => '319151', 'first_name' => 'Thomas', 'last_name' => 'Linsmeier'),
    array( 'nid' => '319151', 'first_name' => 'Kathy', 'last_name' => 'Petroni'),
    array( 'nid' => '319151', 'first_name' => 'Catherine', 'last_name' => 'Shakespeare'),
    array( 'nid' => '319171', 'first_name' => 'Roy', 'last_name' => 'Baumeister'),
    array( 'nid' => '319171', 'first_name' => 'Emily', 'last_name' => 'Garbinsky'),
    array( 'nid' => '319171', 'first_name' => 'Kathleen', 'last_name' => ' Vohs'),
    array( 'nid' => '319181', 'first_name' => 'Christopher', 'last_name' => 'Armstrong'),
    array( 'nid' => '319181', 'first_name' => 'Gaizka', 'last_name' => 'Ormazabal'),
    array( 'nid' => '319181', 'first_name' => 'Daniel', 'last_name' => 'Taylor'),
    array( 'nid' => '319186', 'first_name' => 'Ying', 'last_name' => 'Chen'),
    array( 'nid' => '319186', 'first_name' => 'Hülya', 'last_name' => 'Eraslan'),
    array( 'nid' => '319206', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '319206', 'first_name' => 'Byron', 'last_name' => 'Lee'),
    array( 'nid' => '319226', 'first_name' => 'Michael', 'last_name' => 'Norton'),
    array( 'nid' => '319226', 'first_name' => 'Melanie', 'last_name' => 'Rudd'),
    array( 'nid' => '319431', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '319431', 'first_name' => 'Ruby', 'last_name' => 'Wong'),
    array( 'nid' => '319621', 'first_name' => 'Alan', 'last_name' => 'Henricks'),
    array( 'nid' => '319621', 'first_name' => 'Joellyn', 'last_name' => 'Murphy'),
    array( 'nid' => '320356', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '320356', 'first_name' => 'Vichit', 'last_name' => 'Suraphongschai'),
    array( 'nid' => '320726', 'first_name' => 'Henry', 'last_name' => 'Armour'),
    array( 'nid' => '320726', 'first_name' => 'David', 'last_name' => 'Teece'),
    array( 'nid' => '321191', 'first_name' => 'O.', 'last_name' => 'Joy'),
    array( 'nid' => '321191', 'first_name' => 'Robert', 'last_name' => 'Litzenberger'),
    array( 'nid' => '338044', 'first_name' => 'Ben', 'last_name' => 'Bernanke'),
    array( 'nid' => '338044', 'first_name' => 'Henning', 'last_name' => 'Bohn'),
    array( 'nid' => '338090', 'first_name' => 'Stephen', 'last_name' => 'Ansolabehere'),
    array( 'nid' => '338090', 'first_name' => 'Morris', 'last_name' => 'Fiorina'),
    array( 'nid' => '318671', 'first_name' => 'Naomi', 'last_name' => 'Eisenberger '),
    array( 'nid' => '318671', 'first_name' => 'Curtis', 'last_name' => 'Hardin'),
    array( 'nid' => '318671', 'first_name' => 'Stacey', 'last_name' => 'Sinclair'),
    array( 'nid' => '318766', 'first_name' => 'Michael', 'last_name' => 'Schwarz'),
    array( 'nid' => '318151', 'first_name' => 'Scott', 'last_name' => 'Schaefer'),
    array( 'nid' => '317761', 'first_name' => 'Dimitri', 'last_name' => 'Vayanos'),
    array( 'nid' => '311031', 'first_name' => 'Martin', 'last_name' => 'Hellwig'),
    array( 'nid' => '311076', 'first_name' => 'Paul', 'last_name' => 'Klemperer'),
    array( 'nid' => '311111', 'first_name' => 'Patti', 'last_name' => 'Williams'),
    array( 'nid' => '311126', 'first_name' => 'Jerzy', 'last_name' => 'Konieczny'),
    array( 'nid' => '311171', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '311181', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '311196', 'first_name' => 'Aimee', 'last_name' => 'Drolet'),
    array( 'nid' => '311201', 'first_name' => 'Matthew', 'last_name' => 'White'),
    array( 'nid' => '311211', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '311221', 'first_name' => 'Eddie', 'last_name' => 'Dekel'),
    array( 'nid' => '311231', 'first_name' => 'Terry', 'last_name' => 'Taylor'),
    array( 'nid' => '311236', 'first_name' => 'Terry', 'last_name' => 'Taylor'),
    array( 'nid' => '311241', 'first_name' => 'Amy', 'last_name' => 'Ward'),
    array( 'nid' => '311266', 'first_name' => 'Elizabeth', 'last_name' => 'Pontikes'),
    array( 'nid' => '311301', 'first_name' => 'Zaki', 'last_name' => 'Zahran'),
    array( 'nid' => '311311', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '311326', 'first_name' => 'Satoshi', 'last_name' => 'Akutsu'),
    array( 'nid' => '311336', 'first_name' => 'Aner', 'last_name' => 'Sela'),
    array( 'nid' => '311346', 'first_name' => 'Qingmin', 'last_name' => 'Liu'),
    array( 'nid' => '311356', 'first_name' => 'Ozge', 'last_name' => 'Islegen'),
    array( 'nid' => '311366', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '311376', 'first_name' => 'Sanjog', 'last_name' => 'Misra'),
    array( 'nid' => '311396', 'first_name' => 'Alexander', 'last_name' => 'Nezlobin'),
    array( 'nid' => '311401', 'first_name' => 'Alexander', 'last_name' => 'Nezlobin'),
    array( 'nid' => '311446', 'first_name' => 'Michael', 'last_name' => 'Schwarz'),
    array( 'nid' => '311471', 'first_name' => 'Anastasia', 'last_name' => 'Zakolyukina'),
    array( 'nid' => '311496', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '311511', 'first_name' => 'Carola', 'last_name' => 'Frydman'),
    array( 'nid' => '311516', 'first_name' => 'Simon', 'last_name' => 'Klevansky'),
    array( 'nid' => '311526', 'first_name' => 'Pradeep', 'last_name' => 'Chintagunta'),
    array( 'nid' => '311571', 'first_name' => 'Brett', 'last_name' => 'Gordon'),
    array( 'nid' => '311576', 'first_name' => 'Balazs', 'last_name' => 'Kovacs'),
    array( 'nid' => '311581', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '311601', 'first_name' => 'Paul', 'last_name' => 'Klemperer'),
    array( 'nid' => '311616', 'first_name' => 'Katarina', 'last_name' => 'Lewellen'),
    array( 'nid' => '311636', 'first_name' => 'Steven', 'last_name' => 'Wilkinson'),
    array( 'nid' => '311661', 'first_name' => 'Cecilia', 'last_name' => 'Mo'),
    array( 'nid' => '311691', 'first_name' => 'Sudipto', 'last_name' => 'Bhattacharya'),
    array( 'nid' => '315791', 'first_name' => 'David', 'last_name' => 'McKendrick'),
    array( 'nid' => '315801', 'first_name' => 'Randolph', 'last_name' => 'Bucklin'),
    array( 'nid' => '315941', 'first_name' => 'Janet', 'last_name' => 'Spitz'),
    array( 'nid' => '316011', 'first_name' => 'Allan', 'last_name' => 'Kleidon'),
    array( 'nid' => '316066', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '316091', 'first_name' => 'Vijay', 'last_name' => 'Gurbaxani'),
    array( 'nid' => '316096', 'first_name' => 'Bertrand', 'last_name' => 'Jacquillat'),
    array( 'nid' => '316146', 'first_name' => 'Gwendolyn', 'last_name' => 'Ortmeyer'),
    array( 'nid' => '316166', 'first_name' => 'Linda', 'last_name' => 'Ginzel'),
    array( 'nid' => '316186', 'first_name' => 'Piotr', 'last_name' => 'Swistak'),
    array( 'nid' => '316191', 'first_name' => 'Piotr', 'last_name' => 'Swistak'),
    array( 'nid' => '316261', 'first_name' => 'Mark', 'last_name' => 'Lang'),
    array( 'nid' => '316271', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '316296', 'first_name' => 'James', 'last_name' => 'Lavin'),
    array( 'nid' => '316321', 'first_name' => 'David', 'last_name' => 'Bell'),
    array( 'nid' => '316336', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '316406', 'first_name' => 'Allen', 'last_name' => 'Weiss'),
    array( 'nid' => '316446', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '316486', 'first_name' => 'Rashi', 'last_name' => 'Glazer'),
    array( 'nid' => '316496', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '316541', 'first_name' => 'W.', 'last_name' => 'Steinmueller'),
    array( 'nid' => '316576', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '316581', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '316666', 'first_name' => 'Ingrid', 'last_name' => 'Werner'),
    array( 'nid' => '316711', 'first_name' => 'Dan', 'last_name' => 'Swenson'),
    array( 'nid' => '316756', 'first_name' => 'Mark', 'last_name' => 'Lang'),
    array( 'nid' => '316801', 'first_name' => 'Sanjeev', 'last_name' => 'Dewan'),
    array( 'nid' => '316851', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '316876', 'first_name' => 'Daniel ', 'last_name' => 'Diermeier'),
    array( 'nid' => '316886', 'first_name' => 'Julio', 'last_name' => 'Rotemberg'),
    array( 'nid' => '316976', 'first_name' => 'Bengt', 'last_name' => 'Holmstrom'),
    array( 'nid' => '316981', 'first_name' => 'Alfred', 'last_name' => 'Osborne'),
    array( 'nid' => '317036', 'first_name' => 'David', 'last_name' => 'Aboody'),
    array( 'nid' => '317106', 'first_name' => 'Glenn', 'last_name' => 'Chertow'),
    array( 'nid' => '317131', 'first_name' => 'Michael', 'last_name' => 'Herron'),
    array( 'nid' => '317221', 'first_name' => 'Geert', 'last_name' => 'Bekaert'),
    array( 'nid' => '317231', 'first_name' => 'Olav', 'last_name' => 'Sorenson'),
    array( 'nid' => '317306', 'first_name' => 'Karen', 'last_name' => 'Nelson'),
    array( 'nid' => '317321', 'first_name' => 'Chezy', 'last_name' => 'Ofir'),
    array( 'nid' => '317326', 'first_name' => 'Ran', 'last_name' => 'Kivetz'),
    array( 'nid' => '317336', 'first_name' => 'Stephen', 'last_name' => 'Nowlis'),
    array( 'nid' => '317346', 'first_name' => 'David', 'last_name' => 'Owens'),
    array( 'nid' => '317351', 'first_name' => 'Terri', 'last_name' => 'Griffith'),
    array( 'nid' => '317416', 'first_name' => 'Susan', 'last_name' => 'Linton'),
    array( 'nid' => '317436', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '317456', 'first_name' => 'Michael', 'last_name' => 'Woywode'),
    array( 'nid' => '317461', 'first_name' => 'Alan', 'last_name' => 'Wiseman'),
    array( 'nid' => '317466', 'first_name' => 'D.', 'last_name' => 'Kiewiet'),
    array( 'nid' => '317471', 'first_name' => 'Adam', 'last_name' => 'Meirowitz'),
    array( 'nid' => '317616', 'first_name' => 'Lainie', 'last_name' => 'Ross'),
    array( 'nid' => '317656', 'first_name' => 'Amy', 'last_name' => 'Hutton'),
    array( 'nid' => '317661', 'first_name' => 'David', 'last_name' => 'Aboody'),
    array( 'nid' => '317671', 'first_name' => 'Hugo', 'last_name' => 'Hopenhayn'),
    array( 'nid' => '317676', 'first_name' => 'Daniel', 'last_name' => 'Diermeier'),
    array( 'nid' => '317736', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '317741', 'first_name' => 'Adam', 'last_name' => 'Meirowitz'),
    array( 'nid' => '317751', 'first_name' => 'Matthew', 'last_name' => 'White'),
    array( 'nid' => '317756', 'first_name' => 'Susan', 'last_name' => 'Fournier'),
    array( 'nid' => '317771', 'first_name' => 'Sunil', 'last_name' => 'Dutta'),
    array( 'nid' => '317806', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '317811', 'first_name' => 'Laszlo', 'last_name' => 'Polos'),
    array( 'nid' => '317826', 'first_name' => 'Ron', 'last_name' => 'Kivetz'),
    array( 'nid' => '317831', 'first_name' => 'Carl', 'last_name' => 'Shapiro'),
    array( 'nid' => '317896', 'first_name' => 'Sunil', 'last_name' => 'Dutta'),
    array( 'nid' => '317956', 'first_name' => 'Scott', 'last_name' => 'Schaefer'),
    array( 'nid' => '318026', 'first_name' => 'David', 'last_name' => 'Aboody'),
    array( 'nid' => '318116', 'first_name' => 'Ilan', 'last_name' => 'Kremer'),
    array( 'nid' => '318131', 'first_name' => 'Jonathan', 'last_name' => 'Levin'),
    array( 'nid' => '318141', 'first_name' => 'Bruno', 'last_name' => 'Solnik'),
    array( 'nid' => '318161', 'first_name' => 'Tim', 'last_name' => 'Baldenius'),
    array( 'nid' => '318186', 'first_name' => 'Matthew', 'last_name' => 'White'),
    array( 'nid' => '318191', 'first_name' => 'Frank', 'last_name' => 'Wolak'),
    array( 'nid' => '318216', 'first_name' => 'Patrick', 'last_name' => 'Bajari'),
    array( 'nid' => '318246', 'first_name' => 'Fabrizio', 'last_name' => 'Ferraro'),
    array( 'nid' => '318271', 'first_name' => 'Christina', 'last_name' => 'Fong'),
    array( 'nid' => '318276', 'first_name' => 'Sandra', 'last_name' => 'Graham'),
    array( 'nid' => '318281', 'first_name' => 'Alan', 'last_name' => 'Wiseman'),
    array( 'nid' => '318336', 'first_name' => 'Steven', 'last_name' => 'Berry'),
    array( 'nid' => '318356', 'first_name' => 'Sunil', 'last_name' => 'Dutta'),
    array( 'nid' => '318381', 'first_name' => 'Matthew', 'last_name' => 'Mitchell'),
    array( 'nid' => '318396', 'first_name' => 'Chezy', 'last_name' => 'Ofir'),
    array( 'nid' => '318416', 'first_name' => 'Joseph', 'last_name' => 'Harrington'),
    array( 'nid' => '318421', 'first_name' => 'Yuliy', 'last_name' => 'Sannikov'),
    array( 'nid' => '318426', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '318431', 'first_name' => 'Amy', 'last_name' => 'Ward'),
    array( 'nid' => '318436', 'first_name' => 'Terry', 'last_name' => 'Taylor'),
    array( 'nid' => '318466', 'first_name' => 'Neng', 'last_name' => 'Wang'),
    array( 'nid' => '318486', 'first_name' => 'Oded', 'last_name' => 'Netzer'),
    array( 'nid' => '318496', 'first_name' => 'Webb', 'last_name' => 'McKinney'),
    array( 'nid' => '318501', 'first_name' => 'Liisa', 'last_name' => 'Valikangas'),
    array( 'nid' => '318506', 'first_name' => 'Daniel', 'last_name' => 'Diermeier'),
    array( 'nid' => '318516', 'first_name' => 'Angela', 'last_name' => 'Lee'),
    array( 'nid' => '318531', 'first_name' => 'David', 'last_name' => 'McKendrick'),
    array( 'nid' => '318556', 'first_name' => 'Ozgecan', 'last_name' => 'Kocak'),
    array( 'nid' => '318561', 'first_name' => 'Gregor', 'last_name' => 'Matvos'),
    array( 'nid' => '318566', 'first_name' => 'Michael', 'last_name' => 'Schwarz'),
    array( 'nid' => '318571', 'first_name' => 'Wendy', 'last_name' => 'Liu'),
    array( 'nid' => '318646', 'first_name' => 'V.', 'last_name' => 'Viard'),
    array( 'nid' => '318656', 'first_name' => 'Jonathan', 'last_name' => 'Woon'),
    array( 'nid' => '318716', 'first_name' => 'Mark', 'last_name' => 'Soliman'),
    array( 'nid' => '318721', 'first_name' => 'Colin', 'last_name' => 'Stewart'),
    array( 'nid' => '318761', 'first_name' => 'Gregor', 'last_name' => 'Matvos'),
    array( 'nid' => '318786', 'first_name' => 'Benjamin', 'last_name' => 'Roy'),
    array( 'nid' => '318806', 'first_name' => 'Paul', 'last_name' => 'Klemperer'),
    array( 'nid' => '318861', 'first_name' => 'Richard', 'last_name' => 'Gil'),
    array( 'nid' => '318876', 'first_name' => 'Robert', 'last_name' => 'Siegel'),
    array( 'nid' => '318901', 'first_name' => 'Fadi', 'last_name' => 'Kanaan'),
    array( 'nid' => '318916', 'first_name' => 'Dennis', 'last_name' => 'Wheaton'),
    array( 'nid' => '318921', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '318926', 'first_name' => 'Debra', 'last_name' => 'Schifrin'),
    array( 'nid' => '318931', 'first_name' => 'Wendy', 'last_name' => 'Liu'),
    array( 'nid' => '318946', 'first_name' => 'Bruno', 'last_name' => 'Solnik'),
    array( 'nid' => '318961', 'first_name' => 'Marc', 'last_name' => 'Meredith'),
    array( 'nid' => '318966', 'first_name' => 'Puneet', 'last_name' => 'Manchanda'),
    array( 'nid' => '319026', 'first_name' => 'Cassie', 'last_name' => 'Mogilner'),
    array( 'nid' => '319056', 'first_name' => 'Alexander', 'last_name' => 'Hirsch'),
    array( 'nid' => '319156', 'first_name' => 'Elizabeth', 'last_name' => 'Pontikes'),
    array( 'nid' => '319196', 'first_name' => 'Sanford', 'last_name' => 'DeVoe'),
    array( 'nid' => '319201', 'first_name' => 'Zachary', 'last_name' => 'Peksowitz'),
    array( 'nid' => '319216', 'first_name' => 'Willemein', 'last_name' => 'Kets'),
    array( 'nid' => '319251', 'first_name' => 'R.', 'last_name' => 'Stehle'),
    array( 'nid' => '319646', 'first_name' => 'Patrick', 'last_name' => 'Mantey'),
    array( 'nid' => '320061', 'first_name' => 'Daniel', 'last_name' => 'Cooperman'),
    array( 'nid' => '320881', 'first_name' => 'Donald', 'last_name' => 'Baron'),
    array( 'nid' => '320916', 'first_name' => 'Margaret', 'last_name' => 'Bray'),
    array( 'nid' => '321436', 'first_name' => 'Gwendolyn', 'last_name' => 'Ortmeyer'),
    array( 'nid' => '321481', 'first_name' => 'Brett', 'last_name' => 'Gordon'),
    array( 'nid' => '337975', 'first_name' => 'John', 'last_name' => 'Geanakoplos'),
    array( 'nid' => '337994', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '338031', 'first_name' => 'David', 'last_name' => 'Besanko'),
    array( 'nid' => '338050', 'first_name' => 'Rosser', 'last_name' => 'Nelson'),
    array( 'nid' => '338063', 'first_name' => 'Wayne', 'last_name' => 'Shafer'),
    array( 'nid' => '338074', 'first_name' => 'Randolph', 'last_name' => 'Bucklin'),
    array( 'nid' => '338078', 'first_name' => 'Chi-fu', 'last_name' => 'Huang'),
    array( 'nid' => '338079', 'first_name' => 'Mark', 'last_name' => 'Garman'),
  );
  _gsb_feature_working_paper_ct_set_other_authors($data);
}  


